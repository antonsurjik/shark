dotnet new mvc

Add ConnectionStrings in appsettings.json

> dotnet add package Microsoft.EntityFrameworkCore
> dotnet add package Microsoft.EntityFrameworkCore.Design
> dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL

Create model:
// Models/Product.cs
namespace EfPostgresDemo.Models
{
    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public decimal Price { get; set; }
    }
}

Create DbContext:
// Data/ApplicationDbContext.cs
using Microsoft.EntityFrameworkCore;
using EfPostgresDemo.Models;

namespace EfPostgresDemo.Data
{
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {
        }

        public DbSet<Product> Products { get; set; }
    }
}

In program.cs:
+ using EfPostgresDemo.Data;
+ using Microsoft.EntityFrameworkCore;
+ (before var app) builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));

Make migrations:
> dotnet ef migrations add InitialCreate
> dotnet ef database update
(if doesnt work: > dotnet tool install --global dotnet-ef)

Create controller:
// Controllers/ProductsController.cs
using EfPostgresDemo.Data;
using EfPostgresDemo.Models;
using Microsoft.AspNetCore.Mvc;
using System.Linq;

namespace EfPostgresDemo.Controllers
{
    public class ProductsController : Controller
    {
        private readonly ApplicationDbContext _context;

        public ProductsController(ApplicationDbContext context)
        {
            _context = context;
        }

        public IActionResult Index()
        {
            var products = _context.Products.ToList();
            return View(products);
        }

        public IActionResult Create() => View();

        [HttpPost]
        public IActionResult Create(Product product)
        {
            _context.Products.Add(product);
            _context.SaveChanges();
            return RedirectToAction("Index");
        }
    }
}

Create Views in /Products:
Index.cshtml:
@model IEnumerable<EfPostgresDemo.Models.Product>

<h2>Products</h2>

<a href="/Products/Create">Create new</a>

<ul>
@foreach (var item in Model)
{
    <li>@item.Name - $@item.Price</li>
}
</ul>

Create.cshtml:
@model EfPostgresDemo.Models.Product

<h2>Create Product</h2>

<form method="post">
    <label>Name:</label>
    <input asp-for="Name" />
    <br />
    <label>Price:</label>
    <input asp-for="Price" />
    <br />
    <button type="submit">Save</button>
</form>

run:
dotnet run